/**
 * This code was generated by @basketry/react-query@{{version}}
 *
 * Changes to this file may cause incorrect behavior and will be lost if
 * the code is regenerated.
 *
 * To make changes to the contents of this file:
 * 1. Edit source/path.ext
 * 2. Run the Basketry CLI
 *
 * About Basketry: https://github.com/basketry/basketry/wiki
 * About @basketry/react-query: https://github.com/basketry/react-query#readme
 */

import { mutationOptions, queryOptions } from '@tanstack/react-query';
import type {
  CreateWidgetParams,
  DeleteWidgetFooParams,
  GetWidgetFooParams,
} from '../types';
import { getWidgetService } from './context';
import { CompositeError } from './runtime';

export const createWidgetMutationOptions = () => {
  const widgetService = getWidgetService();
  return mutationOptions({
    mutationFn: async (params?: CreateWidgetParams) => {
      const res = await widgetService.createWidget(params);
      if (res.errors.length) {
        throw new CompositeError(res.errors);
      } else if (!res.data) {
        throw new Error('Unexpected data error: Failed to get example');
      }
      return res.data;
    },
  });
};

export const deleteWidgetFooMutationOptions = () => {
  const widgetService = getWidgetService();
  return mutationOptions({
    mutationFn: async (params: DeleteWidgetFooParams) => {
      const res = await widgetService.deleteWidgetFoo(params);
      if (res.errors.length) {
        throw new CompositeError(res.errors);
      } else if (!res.data) {
        throw new Error('Unexpected data error: Failed to get example');
      }
      return res.data;
    },
  });
};

export const getWidgetFooQueryOptions = (params: GetWidgetFooParams) => {
  const widgetService = getWidgetService();
  return queryOptions({
    queryKey: ['widget', 'getWidgetFoo', params || {}] as const,
    queryFn: async () => {
      const res = await widgetService.getWidgetFoo(params);
      if (res.errors.length) {
        throw new CompositeError(res.errors);
      } else if (!res.data) {
        throw new Error('Unexpected data error: Failed to get example');
      }
      return res;
    },
  });
};

export const getWidgetsQueryOptions = () => {
  const widgetService = getWidgetService();
  return queryOptions({
    queryKey: ['widget', 'getWidgets', {}] as const,
    queryFn: async () => {
      const res = await widgetService.getWidgets();
      if (res.errors.length) {
        throw new CompositeError(res.errors);
      } else if (!res.data) {
        throw new Error('Unexpected data error: Failed to get example');
      }
      return res;
    },
  });
};

export const putWidgetMutationOptions = () => {
  const widgetService = getWidgetService();
  return mutationOptions({
    mutationFn: async () => {
      const res = await widgetService.putWidget();
      if (res.errors.length) {
        throw new CompositeError(res.errors);
      } else if (!res.data) {
        throw new Error('Unexpected data error: Failed to get example');
      }
      return res.data;
    },
  });
};
